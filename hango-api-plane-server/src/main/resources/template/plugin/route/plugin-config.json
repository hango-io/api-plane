{
  "item": [
    {
      "name": "ianus-percent-limit",
      "displayName": "百分比限流",
      "schema": "plugin/route/ianus-percent-limit.json",
      "description": "百分比限流插件",
      "pluginScope": "routeRule",
      "instructionForUse": "按百分比限流，例如允许50%流量通过",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "网关实例按照百分比限制请求流量，通过网关实例到达后端服务的流量为（1-限制值/100）*实际流量。 当触发限流时，网关返回 429 Too Many Requests。"
    },
    {
      "name": "local-limiting",
      "displayName": "本地限流",
      "schema": "plugin/route/local-limit.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "请求频率限流，限制网关实例节点的服务请求流量",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "限制符合匹配条件的请求QPS值，支持配置多组限流规则。每一组限流规则，支持配置请求头匹配条件，当请求流量满足该匹配条件（如果未配置匹配条件，路由下任意请求均满足），即根据QPS值对此类请求进行流量控制。每一个网关实例有独立的计数器，其实际QPS值，为限流规则QPS值除以网关实例数。 当触发限流时，网关返回 429 Too Many Requests。"
    },
    {
      "name": "rate-limiting",
      "displayName": "集群限流",
      "schema": "plugin/route/rate-limiting.json",
      "description": "频控插件",
      "pluginScope": "routeRule",
      "instructionForUse": "基于分布式限流组件对服务请求流量进行限制",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "限制符合匹配条件的请求QPS值，支持配置多组限流规则。每一组限流规则，支持配置请求头匹配条件，当请求流量满足该匹配条件（如果未配置匹配条件，路由下任意请求均满足），即根据QPS值对此类请求进行流量控制。多个网关实例共享计数器，限制实际到达服务的总QPS。 当触发限流时，网关返回 429 Too Many Requests。"
    },
    {
      "name": "cluster-group-limiting",
      "displayName": "集群分组限流",
      "schema": "plugin/route/cluster-group-limiting.json",
      "description": "集群分组插件",
      "pluginScope": "routeRule",
      "instructionForUse": "基于分布式限流组件对服务请求流量进行分组限制",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "限制符合匹配条件的请求QPS值，支持配置多组限流规则。每一组限流规则，支持指定请求头名称，相同请求头和值的请求为一个组，对同一组内的请求进行总QPS限制。 当触发限流时，网关返回 429 Too Many Requests。"
    },
    {
      "name": "circuit-breaker",
      "displayName": "熔断",
      "schema": "plugin/route/circuit-breaker.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "当后端服务错误率和时延超过阈值时，拦截客户端请求，保护后端服务",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "当错误率或慢响应连续产生次数超过阈值时触发熔断，路由即进入熔断状态，此时对任意请求网关均将自定义响应返回给客户端，熔断时间结束后服务状态变为正常，将正常响应客户端请求。"
    },
    {
      "name": "static-downgrade",
      "displayName": "静态降级",
      "schema": "plugin/route/static-downgrade.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "当后端响应异常时，返回固定响应给客户端",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "当请求和响应匹配降级条件时，网关返回自定义的响应返回给客户端。"
    },
    {
      "name": "dynamic-downgrade",
      "displayName": "动态降级",
      "schema": "plugin/route/dynamic-downgrade.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "当后端响应异常时，返回缓存响应给客户端，或者转发请求给降级接口处理",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "当请求和响应匹配降级条件时，网关返回之前请求的响应缓存，或者转发请求到降级服务进行处理，并返回降级处理响应结果给客户端。"
    },
    {
      "name": "local-cache",
      "displayName": "本地缓存",
      "schema": "plugin/route/local-cache.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "pluginPriority": "80",
      "instructionForUse": "本地缓存后端应答，以缓存响应请求",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "根据请求和响应匹配条件将请求的响应结果缓存到本地内存，当后续请求满足请求匹配条件时，网关将已缓存的响应返回给客户端。设置自定义缓存Key计算，可以根据请求参数提供多个缓存值。"
    },
    {
      "name": "redis-cache",
      "displayName": "Redis缓存",
      "schema": "plugin/route/redis-cache.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "redis缓存后端应答，以缓存响应请求",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "根据请求和响应匹配条件将请求的响应结果缓存到Redis，当后续请求满足请求匹配条件时，网关将已缓存的响应返回给客户端。设置自定义缓存Key计算，可以根据请求参数提供多个缓存值。"
    },
    {
      "name": "ianus-router",
      "displayName": "请求中断",
      "schema": "plugin/route/ianus-router.json",
      "description": "请求中断插件",
      "pluginScope": "routeRule",
      "instructionForUse": "请求中断返回，支持定义响应码和响应Body",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": "网关拦截当前路由下的所有请求，并返回用户指定的响应码和响应Body。"
    },
    {
      "name": "jwt-auth",
      "displayName": "JWT认证",
      "schema": "plugin/route/jwt-auth.json",
      "description": "JWT认证插件",
      "pluginScope": "routeRule,global",
      "instructionForUse": "提供JWT认证",
      "categoryKey": "auth",
      "categoryName": "认证鉴权",
      "pluginGuidance": "网关提供JWT认证，对请求中的JWT token进行合法性校验，网关将会拦截token非法的请求。如果需要对请求的消费者进行身份权限验证，可以使用基础鉴权等鉴权插件。 当请求token非法时，网关返回 401 Unauthorized。"
    },
    {
      "name": "oauth2-auth",
      "displayName": "OAuth2认证",
      "schema": "plugin/route/oauth2Auth.json",
      "description": "",
      "pluginScope": "global,routeRule",
      "pluginPriority": "120",
      "instructionForUse": "提供OAuth2认证",
      "categoryKey": "auth",
      "categoryName": "认证鉴权",
      "pluginGuidance": "网关提供OAuth2认证，对请求中的Authorization头进行合法性校验，网关将会拦截Authorization头非法的请求。如果需要对请求的客户端进行身份权限验证，可以使用基础鉴权等鉴权插件。 当请求Authorization头非法时，网关返回 401 Unauthorized。"
    },
    {
      "name": "simple-auth",
      "displayName": "简单认证",
      "schema": "plugin/route/simpleAuth.json",
      "description": "",
      "pluginScope": "global,routeRule",
      "instructionForUse": "提供简单认证",
      "categoryKey": "auth",
      "categoryName": "认证鉴权",
      "pluginGuidance": "网关提供简单认证，对请求header中的用户信息进行合法性校验，网关将会拦截请求中用户非法的请求。 当请求的用户信息非法时，网关返回 401 Unauthorized。"
    },
    {
      "name": "basic-rbac",
      "displayName": "基础鉴权",
      "schema": "plugin/route/basic-rbac.json",
      "description": "提供基于外部认证鉴权",
      "pluginScope": "routeRule,global",
      "instructionForUse": "提供基于外部认证鉴权",
      "categoryKey": "auth",
      "categoryName": "认证鉴权",
      "pluginGuidance": "网关根据请求对应的外部认证进行访问权限校验，如果请求的外部认证不在配置列表内，网关将会拦截该请求。 当请求客户端无访问权限时，网关返回 403 Forbidden。"
    },
    {
      "name": "ip-restriction",
      "displayName": "IP黑白名单",
      "schema": "plugin/route/ip-restriction.json",
      "description": "黑白名单插件",
      "pluginScope": "routeRule,global",
      "instructionForUse": "根据IP过滤请求",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": "网关根据请求来源IP限制请求。黑名单类型，网关会限制在黑名单内的IP请求，其他IP请求放行；白名单类型，网关仅放行白名单的IP请求，其他IP请求拦截。 当请求被拦截时，网关返回 403 Forbidden。"
    },
    {
      "name": "ua-restriction",
      "displayName": "UA黑白名单",
      "schema": "plugin/route/ua-restriction.json",
      "description": "UA黑白名单插件",
      "pluginScope": "routeRule,global,host",
      "instructionForUse": "根据user-agent过滤请求",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": "网关根据请求客户端类型限制请求。黑名单类型，网关会限制匹配黑名单客户端请求，其他客户端类型请求放行；白名单类型，网关会放行匹配白名单客户端的请求，拦截其他客户端请求。 当请求被拦截时，网关返回 403 Forbidden。"
    },
    {
      "name": "referer-restriction",
      "displayName": "Referer黑白名单",
      "schema": "plugin/route/referer-restriction.json",
      "description": "Referer黑白名单插件",
      "pluginScope": "routeRule,global",
      "instructionForUse": "根据referer过滤请求",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": "网关根据请求referer源限制请求。黑名单类型，网关会限制匹配黑名单内referer源请求，其他referer源请求放行；白名单类型，网关会放行匹配白名单referer源的请求，拦截其他referer源请求。 当请求被拦截时，网关返回 403 Forbidden。"
    },
    {
      "name": "header-restriction",
      "displayName": "Header黑白名单",
      "schema": "plugin/route/header-restriction.json",
      "description": "根据header过滤请求",
      "pluginScope": "routeRule,global",
      "instructionForUse": "根据header过滤请求",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": "网关根据请求header参数限制请求。黑名单类型，网关会限制匹配黑名单header的请求，其他header请求放行；白名单类型，网关会放行匹配白名单header的请求，拦截其他header请求。 当请求被拦截时，网关返回 403 Forbidden。"
    },
    {
      "name": "cors",
      "displayName": "CORS",
      "schema": "plugin/route/cors.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "跨域访问CORS",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": "网关提供跨域访问，支持简单请求和预检请求处理。 预检请求的响应头中会携带插件配置的各项参数，来表明是否允许跨域访问以及允许哪些源访问。"
    },
    {
      "name": "jsonp",
      "displayName": "JSONP",
      "schema": "plugin/route/jsonp.json",
      "description": "jsonp插件",
      "pluginScope": "routeRule",
      "instructionForUse": "跨域访问JSONP",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": ""
    },
    {
      "name": "waf",
      "displayName": "WAF",
      "schema": "plugin/route/waf.json",
      "description": "",
      "pluginScope": "routeRule,global,gateway",
      "instructionForUse": "提供应用级安全防护",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": ""
    },
    {
      "name": "parameters-validate",
      "displayName": "参数校验",
      "schema": "plugin/route/parameter-validate-rule.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "检查请求的header和query参数值",
      "categoryKey": "security",
      "categoryName": "安全",
      "pluginGuidance": "校验请求的请求头和查询参数值，包括数值类型、大小、长度和枚举值。网关会拦截不符合参数校验规则的请求。 参数校验不通过时，网关返回 400 Bad Request。"
    },
    {
      "name": "rewrite",
      "displayName": "请求Path重写",
      "schema": "plugin/route/rewrite.json",
      "description": "重写插件",
      "pluginScope": "routeRule",
      "instructionForUse": "修改请求Path前缀",
      "categoryKey": "dataFormat",
      "categoryName": "数据转换",
      "pluginGuidance": "网关转发请求前，替换请求path的前缀，然后转发更新后的请求到后端。"
    },
    {
      "name": "transformer",
      "displayName": "请求重写(即将下架)",
      "schema": "plugin/route/request-transformer-new.json",
      "description": "",
      "pluginScope": "routeRule",
      "instructionForUse": "修改请求Header、Query String以及Path",
      "categoryKey": "dataFormat",
      "categoryName": "数据转换",
      "pluginGuidance": "网关转发请求前，修改请求header、query string和path，然后转发更新后的请求到后端。"
    },
    {
      "name": "request-rewrite",
      "displayName": "请求重写",
      "schema": "plugin/route/request-rewrite.json",
      "description": "",
      "pluginScope": "routeRule",
      "instructionForUse": "修改请求Header、Query String",
      "categoryKey": "dataFormat",
      "categoryName": "数据转换",
      "pluginGuidance": "网关转发请求前，修改请求header、query string和path，然后转发更新后的请求到后端。"
    },
    {
      "name": "response-header-rewrite",
      "displayName": "响应头重写",
      "schema": "plugin/route/response-header-rewrite.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "修改请求的响应头信息",
      "categoryKey": "dataFormat",
      "categoryName": "数据转换",
      "pluginGuidance": "网关转发响应前，修改响应header，然后转发更新后的响应到客户端。"
    },
    {
      "name": "traffic-mark",
      "displayName": "流量染色",
      "schema": "plugin/route/traffic-mark.json",
      "description": "",
      "pluginScope": "routeRule,global",
      "instructionForUse": "为符合条件的请求带上染色标志",
      "categoryKey": "dataFormat",
      "categoryName": "数据转换",
      "pluginGuidance": ""
    },
    {
      "name": "request-body-rewrite",
      "displayName": "请求body转换",
      "schema": "plugin/route/request-body-rewrite.json",
      "description": "",
      "pluginScope": "routeRule",
      "instructionForUse": "修改json格式的请求body内容",
      "categoryKey": "dataFormat",
      "categoryName": "数据转换",
      "pluginGuidance": "网关转发请求前，修改请求body内容，然后转发更新后的请求到后端。"
    },
    {
      "name": "response-body-rewrite",
      "displayName": "响应body转换",
      "schema": "plugin/route/response-body-rewrite.json",
      "description": "",
      "pluginScope": "routeRule",
      "instructionForUse": "修改json格式的响应body内容",
      "categoryKey": "dataFormat",
      "categoryName": "数据转换",
      "pluginGuidance": "网关转发响应前，修改响应body内容，然后转发更新后的响应到客户端。"
    },
    {
      "name": "soap-json-transcoder",
      "displayName": "soap转换",
      "schema": "plugin/route/soap-json-transcoder.json",
      "description": "",
      "pluginScope": "",
      "instructionForUse": "soap转rest",
      "categoryKey": "trafficPolicy",
      "categoryName": "流量管理",
      "pluginGuidance": ""
    }
  ]
}