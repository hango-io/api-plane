syntax = "proto3";

package istio.networking.v1alpha3;

import "google/protobuf/duration.proto";

option go_package = "istio.io/api/networking/v1alpha3";

message VersionManager {
    //If no version is specified, the default version is injected
    string default_version = 1;
    //Upgrade failed retry policy
    RetryPolicy retry_policy = 4;
    //Specify upgrade pod range
    repeated SidecarVersionSpec sidecar_version_spec = 2;
    //Upgrade state under namespace
    Status status = 6;
}

message SidecarVersionSpec {
    oneof selector {
        ViaDeployment via_deployment = 1;
        ViaService via_service = 2;
        ViaStatefulSet via_stateful_set = 3;
        ViaLabelSelector via_label_selector = 4;
    }
    string expected_version = 5;
    // calculate hashcode of pods update status , to confirm if an update is needed
    string pods_hash = 6;
}

message ViaDeployment {
    string name = 2;
}

message ViaService {
    string name = 2;
}

message ViaStatefulSet {
    string name = 2;
}

message ViaLabelSelector {
    map<string, string> labels = 2;
}

message RetryPolicy {
    bool never_retry = 1;
    int64 retry_time = 2;
    google.protobuf.Duration retry_interval = 3;
}

message Status {
    string sync_time = 1;
    repeated PodVersionStatus pod_version_status = 2;
}

message PodVersionStatus {
    string pod_name = 1;
    string current_version = 2;
    string last_update_time = 3;
    //todo: implement
    int32 status_code = 4;
    //todoï¼šimplement
    string status_message = 5;
}